******************************************************************************
*******************************  42.MINISHELL  *******************************
************************************************************jchotel & fde-fram

LAST STEPS DONE :
- gestion des >> et >, reste à faire < et les cas particuliers (si le > n’est pas placé à la fin, sil y en a plusieurs à la suite (seul le dernier compte) etc)

NEXT STEPS ON SCHEDULE :
- traiter les cas particuliers pour chacune des commandes
	- /!\ echo dans ohmyzsh a un comportement diff (@llaurent, @fkorki-, @mbrignol)
- régler le pbm de buildins :
	- /!\ l’utilisation des nouveaux buildins dans des pipes ne fait pas un dernier exit/wait
	- à l’inverse l’utilisation des binaires standards sans pipes ne fork pas…

SIGNAUX :
	ctrl \ quand pas dans le programme puis saut de ligne -> ctrl d : affiche un quit.
	des fois cat /dev/random n'affiche pas de ctrl-c....
	ctrl-d ne reagit pas apres des cat /dev/random/ (?)
	ctrl-\ oublie ce qui a ete ecrit juste sur la ligne...
	une ligne en trop de sautée des fois apres un ctrl-d

INPUT REDIRECTIONS:
gerer le cas des " et des ''



GENERAL INFOS ----------------------------------------------------------------
. SUBJECT ....................................................................
	fork -
	wait,
	waitpid,
	wait3,
	wait4,
	signal - autorise la manipulation d'un process
	kill,
	exit,
	getcwd - récupérer le path du working directory (pwd)
	chdir,
	stat - regarder l’état d’un fichier (prend en paramètre le chemin de ce fichier et une structure stat buff) (man 2)
	lstat,
	fstat,
	execve - doit être compris entre un fork et un wait
	dup,
	dup2,
	pipe,
	opendir,
	readdir,
	closedir,
	strerror,
	errno

. BIN ........................................................................
	- path absolu ?

. ECHO .......................................................................
	- les caractères spéciaux ne sont pas correctement interprétés /!\ c'est à cause de ohmyzsh non?
	- finir l'option -n
	- caractères d’échappements

. UNSET ......................................................................
	- del un maillon de env

. EXPORT .....................................................................
	- rajoute un maillon de env

. PIPES ......................................................................
	- https://stackoverflow.com/questions/43030966/pipe-chaining-in-my-own-shell-implementation

. REDIR ......................................................................
	- http://www.cs.loyola.edu/~jglenn/702/S2005/Examples/dup2.html

CORRECTIONS TEST -------------------------------------------------------------
	- les " doivent toujours être par deux
	- les ' peuvent être seules si dans "
	- le parsing ; ne doit pas se faire si compris entre "
	- vérifier que dans les pipes, pas d’utilisation des bin par défaut
	- cat /dev/random | cat | cat | head -n 5 | cut -b 1-10 | cat -e > out1
	- ctrl-c doit être géré pour ne pas faire d’interruption avec Signal
	- cat /dev/random, ctr c (demander à @mcraipea/maxime craipeau ou Jérome durand)
	/!\ pour tester dans bash (et non zsh), entrer la commande « bash »
