******************************************************************************
*******************************  42.MINISHELL  *******************************
************************************************************jchotel & fde-fram

LAST STEPS DONE :
- utiliser handle_cmd dans les pipes attentions
	- /!\ l’utilisation des nouveaux buildins dans des pipes ne fait pas un dernier exit/wait
	- à l’inverse l’utilisation des binaires standards sans pipes ne fork pas…

NEXT STEPS ON SCHEDULE :
- commencer les >> <
- traiter les cas particuliers pour chacune des commandes 
	- /!\ echo dans ohmyzsh a un comportement diff (@llaurent, @fkorki-, @mbrignol)


TIPS AVANT PUSH --------------------------------------------------------------
	- Cat dev random, ctr c (demander à @mcraipea/maxime craipeau ou Jérome durand)

GENERAL INFOS ----------------------------------------------------------------
. SUBJECT ....................................................................
	fork -
	wait,
	waitpid,
	wait3,
	wait4,
	signal - autorise la manipulation d'un process
	kill,
	exit,
	getcwd - récupérer le path du working directory (pwd)
	chdir,
	stat - regarder l’état d’un fichier (prend en paramètre le chemin de ce fichier et une structure stat buff) (man 2)
	lstat,
	fstat,
	execve - doit être compris entre un fork et un wait
	dup,
	dup2,
	pipe,
	opendir,
	readdir,
	closedir,
	strerror,
	errno

. BIN ........................................................................
	- path absolu ?

. ECHO .......................................................................
	- les caractères spéciaux ne sont pas correctement interprétés /!\ c'est à cause de ohmyzsh non?
	- finir l'option -n
	- caractères d’échappements

. UNSET ......................................................................
	- del un maillon de env

. EXPORT .....................................................................
	- rajoute un maillon de env

. PIPES ......................................................................
	- https://stackoverflow.com/questions/43030966/pipe-chaining-in-my-own-shell-implementation

CORRECTIONS TEST -------------------------------------------------------------
	- les " doivent toujours être par deux
	- les ' peuvent être seules si dans "
	- le parsing ; ne doit pas se faire si compris entre "
	- vérifier que dans les pipes, pas d’utilisation des buildins pour echo…
	- cat /dev/random | cat | cat | head -n 5 | cut -b 1-10 | cat -e
	- ctrl-c doit être géré pour ne pas faire d’interuption avec Signal
	- Cat dev random, ctr c (demander à @mcraipea/maxime craipeau ou Jérome durand)
